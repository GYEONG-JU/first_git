******************************************

rebase �����ϸ鼭

����� git ����� ��ƺ��ô�!

�Բ� �ڶ󳪴� �Ʊ���ڵ�~��

******************************************


20180508 �迹��

���� �� Ŀ��� ������ ���� $ git cherry-pick ��ɾ ����մϴ�.

$ git cherry-pick ��ɾ� �ڿ� �����ϰ� ��� Ŀ�� �ؽ��� ����ִ� ����� Ŀ��� ������ �� �ֽ�ϴ�.

+ �� �� $ git log ��ɾ�� �ش� Ŀ���� ������ ��� Ȯ���� �� �ֽ�ϴ�.




=======
3/29 양혜리 
화재 및 재난 발생시 git-fire 를 명령어로 내리면 작업중이었던 
코드가 원격 서버에 commit/push 됩니다 !!


******************************************

4/2 김예진

20180508 김예진

리셋 후 커밋을 복구할 때는 $ git cherry-pick 명령어를 사용합니다.

$ git cherry-pick 명령어 뒤에 복구하고 싶은 커밋 해쉬를 적어주는 것으로 커밋을 복구할 수 있습니다.

+ 그 후 $ git log 명령어로 해당 커밋이 복구된 것을 확인할 수 있습니다.


******************************************
3/31 강수지
Repository의 완전한 복사본을 로컬 장비에 둘 수 있다.
=======

3/31 김정희
GitHub는 사람들이 소프트웨어를 개발하는 방식이다



******************************************

4/2 Taerim Lee

좋은 git 커밋 메시지를 작성하는 방법
1. 제목과 본문을 한 줄 띄워 분리하기
2. 제목은 영문 기준 50자 이내로
3. 제목 첫 글자를 대문자로
4. 제목 끝에 . 금지
5. 제목은 명령조로
6. 본문은 영문 기준 72자마다 줄 바꾸기
7. 본문은 어떻게보다 무엇을, 왜에 맞춰 작성하기

(출처: https://meetup.toast.com/posts/106)


4/1 이승희
변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교해볼 수 있다!
git diff <원래가지> <비교 대상 가지>


4/1 구세영
git diff 명령을 사용하면 현재 unstaged된(add되지않은) 수정사항만을 확인할 수 있다. 

4/2 이효영
git config --global alias.<별명> <명령어>
를 통해 명령어의 별명을 만들어 명령어를 쉽게 사용할 수 있다!


